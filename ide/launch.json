// Copy launch.json, tasks.json, and settings.json to .vscode/
// Note: Must copy openocd/contrib/60-openocd.rules to /etc/udev/rules.d and:
// 1. add user to 'plugdev' group
// 2. execute 'sudo udevadm trigger'
// 3. execute 'sudo service udev restart'
// Then, connect SWD lines, plug in the debugger, pass through using USBIPD, and everything should work.
// To debug: make sure you have the Cortex-Debug extension, go to "Run and Debug", and choose the
// "Prototroller Debug" configuration.
// To flash: Ctrl+Shift+B Or select "Run Task" from terminal menu and select "Prototroller Flash".
// NOTE: "Run without debugging" doesn't with with Cortex Debug, use the flash task instead.
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Prototroller Debug",
            "cwd": "${workspaceRoot}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "gdbPath" : "gdb-multiarch",
            "device": "RP2040",
            "configFiles": [
                "interface/cmsis-dap.cfg",
                "target/rp2040.cfg"
            ],
            "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
            "runToMain": true,
            "openOCDLaunchCommands": [
                "adapter speed 5000"
            ],
            "postRestartCommands": [
                "break main",
                "continue"
            ]
        }
    ]
}
